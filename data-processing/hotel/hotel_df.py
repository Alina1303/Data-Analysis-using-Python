# -*- coding: utf-8 -*-
"""hotel_df.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15PmmG2nr0W7oZjyJihMGCIE1epuK6FVn

**Загрузка библиотеки**
"""

import pandas as pd

"""**Загрузка датасета**

Описание данных:

**Hotel** – тип отеля (City Hotel или Resort Hotel)

**Is cancele**d – бронирование было отменено (1) или нет (0); неотменённое считается успешным

**Lead time** – количество дней, прошедших между датой бронирования и датой прибытия  

**Arrival full date** – полная дата прибытия

**Arrival date year** – год прибытия  

**Arrival date month** – месяц прибытия  

**Arrival date week number** – номер недели прибытия

**Arrival date day of month** – день прибытия

**Stays in weekend nights** – количество выходных (суббота или воскресенье), которые гость забронировал для проживания в отеле

**Stays in week nights** – количество дней (с понедельника по пятницу), которые гость забронировал для проживания в отеле

**Stays total nights** – общее число забронированных ночей (сумма двух предыдущих колонок)

**Adults** – число взрослых

**Children** – число детей

**Babies** – число младенцев 

**Meal** – выбранный тип питания

**Country** – страна происхождения клиента

**Reserved room type** – тип зарезервированного номера

**Assigned room type** – тип полученного номера (может отличаться от забронированного)

**Customer type** – тип бронирования

**Reservation status** – значение последнего статуса брони: 
  
*   *Canceled* – было отменено клиентом;
*   *Check-Out* – клиент зарегистрировался, но уже покинул отель; 
*   *No-Show* – клиент не зарегистрировался и сообщил администрации отеля причину

**Reservation status date** – дата обновления статуса
"""

bookings = pd.read_csv('bookings.csv', sep=';')
bookings.head()

"""Размер датасета"""

bookings.shape

"""Типы данных"""

bookings.dtypes

"""Переименование колонок"""

def replace_name(data):
  new_name = data.lower().replace(' ', '_')
  return new_name

bookings = bookings.rename(columns=replace_name)

"""*Найти наибольшее число успешных бронирований (если в дальнейшем оно не было отменено (переменная is_canceled))*"""

bookings.loc[bookings.is_canceled == 1].country.value_counts()

"""Таким образом, наибольшее количество бронирования из PRT, GBR, ESP, FRA, ITA.

*Найти на сколько ночей в среднем бронируют отели типа City Hotel? Resort Hotel?*
"""

bookings.groupby('hotel').stays_total_nights.mean().round(2)

"""Среднее число забронированных ночей в отелях типа city hotel: 2.98. В resort hotel: 4.32.

*Найти количество овербукинга в датасете?*
"""

len(bookings.loc[bookings.assigned_room_type != bookings.reserved_room_type])

"""*Найти месяц на котором чащё всего оформляли бронь в 2016 году? изменился ли самый популярный месяц в 2017?*"""

bookings.groupby('arrival_date_year').arrival_date_month.describe()

"""В результате:
1. В 2016 году чаще всего бронировали отель на октябрь
2. В 2017 году чаще всего бронировали на май

*Создайте колонку total_kids, объединив столбцы children и babies. Для отелей какого типа среднее значение переменной оказалось наибольшим?*
"""

bookings['total_kids'] = bookings.children + bookings.babies
bookings.groupby('hotel').total_kids.mean().round(2)

"""Для отеля типа Resort Hotel среднее значение переменной оказалось наибольшим: 0,14.

*Посчитать метрику под названием Churn Rate*
"""

def has_kids(num_kids):
  if num_kids > 0:
    return True
  else:
    return False

bookings['churn_rate'] = bookings.total_kids.apply(has_kids)
bookings

bookings[['churn_rate', 'is_canceled']].value_counts()

(bookings[['churn_rate', 'is_canceled']].value_counts() / bookings[['churn_rate']].value_counts()*100).round(2)

"""Таким образом, соотношение людей отменивших свой заказ и имеющих детей - 72 %, что выше значения людей, которые отменили бронь и у которых отсуствовали дети в заказе на бронирование (на 11 )%. """