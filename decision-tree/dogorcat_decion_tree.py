# -*- coding: utf-8 -*-
"""dogorcat_decion_tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RK2_qIVdV6wxSPIVhNzZPFZIwPCU3Zvx

**Загрузка бибиотек**
"""

from sklearn.model_selection import cross_val_score, train_test_split
from IPython.display import SVG, display, HTML
from sklearn import tree

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import numpy as np

"""**Загрузка датасета (тренировочного и тестового)**"""

data_train = pd.read_csv("dogs_n_cats.csv")
data_train

"""**Обработка данных тренировочных**"""

X = data_train.drop(["Длина", "Высота", "Вид"], axis=1)
y = data_train["Вид"]

"""**Деление тренировочных данных**"""

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

"""**Обучение**"""

data = tree.DecisionTreeClassifier(criterion='entropy', max_depth=15)
data.fit(X_train, y_train)
data.score(X_train, y_train)

data.score(X_test, y_test)

"""**Чтение данных для предсказания**"""

data_test = pd.read_json("dogs_n_cats(train_data).txt")
data_test

"""**Подготовка тестовых данных**"""

X1_test = data_test.drop(["Длина", "Высота"], axis=1)

"""**Предсказание**

*Определение количества характеритик похожих на собак в тестовой выборке*
"""

y1_test = data.predict(X1_test)
res = y1_test[y1_test == 'собачка']
pd.Series(res).count()